"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("@xdoer/x");class e{constructor(){this.cbs=[]}exec(t,s,r){void 0===r&&(r={});let o=-1;const n=[...e.globalCbs,...this.cbs],c=function(e){if(void 0===e&&(e=0),n.length<e)return Promise.resolve();const i=n[e]||s;if(e<=o)throw new Error("next function only can be called once");return o=e,i(t,()=>c(++e),r)};return c()}use(t){return this.cbs.push(t),this}static use(t){return e.globalCbs.push(t),e}}e.globalCbs=[];const s=["get","post","delete","put","patch","head","options"];class r extends e{constructor(t,e){super(),this.adapter=t,this.config=e,this.mount()}mount(){const e=this;s.forEach(s=>{e[s]=(e,o)=>{const n=t.merge(r.defaults,this.config,{path:e,method:s.toUpperCase()},o);return this.controller({request:n,response:{},context:this})}})}request(e,s){const o=t.merge(r.defaults,this.config,"string"==typeof e?{path:e,...s}:e);return this.controller({request:o,response:{},context:this})}async controller(t,e){return void 0===e&&(e={}),await this.exec(t,async t=>{t.response=await this.adapter(t.request)},e),t.response}static create(t,e){const s=new r(t,e),o=(t,e)=>s.request(t,e);return Reflect.setPrototypeOf(o,s),o}}r.defaults={},exports.PreQuest=r;
//# sourceMappingURL=core.cjs.production.min.js.map
