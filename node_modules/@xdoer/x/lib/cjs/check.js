"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPositiveNumber = exports.isPositiveInteger = exports.isPositiveFloat = exports.isNegativeNumber = exports.isNegativeInteger = exports.isNegativeFloat = exports.isInteger = exports.isIdCard = exports.isFloat = exports.isEmpty = exports.isEmail = void 0;

var _object = require("./object");

/**
 * 判断字符串是整数
 */
const isInteger = num => /^-?\d+$/.test(num);
/**
 * 判断字符串是正数
 */


exports.isInteger = isInteger;

const isPositiveNumber = num => /^\d+(\.\d+)?$/.test(num);
/**
 * 判断字符串是负数
 */


exports.isPositiveNumber = isPositiveNumber;

const isNegativeNumber = num => /^-\d+(\.\d+)?$/.test(num);
/**
 * 判断字符串是正整数
 */


exports.isNegativeNumber = isNegativeNumber;

const isPositiveInteger = num => /^\d+$/.test(num);
/**
 * 判断字符串是负整数
 */


exports.isPositiveInteger = isPositiveInteger;

const isNegativeInteger = num => /^-\d+$/.test(num);
/**
 * 判断字符串是浮点数
 */


exports.isNegativeInteger = isNegativeInteger;

const isFloat = num => /^-?\d+\.\d+$/.test(num);
/**
 * 判断字符串是正浮点数
 */


exports.isFloat = isFloat;

const isPositiveFloat = num => /^\d+\.\d+$/.test(num);
/**
 * 判断字符串是负浮点数
 */


exports.isPositiveFloat = isPositiveFloat;

const isNegativeFloat = num => /^-\d+\.\d+$/.test(num);
/**
 * 判断是身份证
 */


exports.isNegativeFloat = isNegativeFloat;

const isIdCard = value => /^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$|^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}([0-9]|X)$/.test(value);
/**
 * 判断是邮箱
 */


exports.isIdCard = isIdCard;

const isEmail = value => /^[0-9A-Za-z]+(\.[0-9A-Za-z]+)?@[0-9A-Za-z]+(\.[0-9A-Za-z]+)?\.[A-Za-z]+/.test(value);
/**
 * 数据是否为空
 * undefined、null、0、''、 {}、[] 判断为空
 */


exports.isEmail = isEmail;

const isEmpty = data => {
  switch ((0, _object.is)(data)) {
    case 'undefined':
    case 'null':
    case 'string':
    case 'number':
      return !data;

    case 'object':
      return !Object.keys(data).length;

    case 'array':
      return !data.length;

    case 'map':
    case 'set':
      return !data.size;
  }

  return true;
};

exports.isEmpty = isEmpty;