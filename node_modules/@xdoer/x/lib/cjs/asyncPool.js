"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.asyncPool = void 0;

// refer: https://github.com/rxaviers/async-pool/blob/master/lib/es7.js
const asyncPool = async (poolLimit, array, iteratorFn) => {
  const ret = [];
  const executing = [];

  for (const item of array) {
    // iteratorFn Promise 化，防止 iteratorFn 返回的不是 Promise
    const p = Promise.resolve().then(() => iteratorFn(item, array));
    ret.push(p); // 控制并发

    if (poolLimit <= array.length) {
      // iteratorFn 执行后，从执行队列中删除任务
      const e = p.then(() => {
        executing.splice(executing.indexOf(e), 1);
      }); // 异步，所以 push 先执行

      executing.push(e);

      if (executing.length >= poolLimit) {
        await Promise.race(executing);
      }
    }
  }

  return Promise.all(ret);
};

exports.asyncPool = asyncPool;